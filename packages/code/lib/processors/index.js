// Code generated by coz. DO NOT EDIT.
/* eslint-disable */
// @ts-nocheck
/**
 * @access protected
 * @description Processor functions
 * @memberOf module:@the-/code
 * @namespace processors
 */
'use strict'

const processCSSProp_ = require('./processCSSProp')
const processCSSRule_ = require('./processCSSRule')
const processFileEnd_ = require('./processFileEnd')
const processJSArray_ = require('./processJSArray')
const processJSBinaryExpression_ = require('./processJSBinaryExpression')
const processJSBlock_ = require('./processJSBlock')
const processJSChaining_ = require('./processJSChaining')
const processJSClass_ = require('./processJSClass')
const processJSComment_ = require('./processJSComment')
const processJSDeclaration_ = require('./processJSDeclaration')
const processJSDoc_ = require('./processJSDoc')
const processJSExport_ = require('./processJSExport')
const processJSFunction_ = require('./processJSFunction')
const processJSIf_ = require('./processJSIf')
const processJSImport_ = require('./processJSImport')
const processJSON_ = require('./processJSON')
const processJSObject_ = require('./processJSObject')
const processJSPrettier_ = require('./processJSPrettier')
const processJSRedundant_ = require('./processJSRedundant')
const processJSRequire_ = require('./processJSRequire')
const processJSStrict_ = require('./processJSStrict')
const processJSString_ = require('./processJSString')
const processJSSwitch_ = require('./processJSSwitch')
const processJSUnused_ = require('./processJSUnused')
const processJSXAttribute_ = require('./processJSXAttribute')
const processJSXExpression_ = require('./processJSXExpression')
const processPackageJSON_ = require('./processPackageJSON')
const processPackageLockJSON_ = require('./processPackageLockJSON')
const processYAML_ = require('./processYAML')

// `module.exports` overrides these `exports.*`, but still needs them for lebab (https://github.com/lebab/lebab)
exports.processCSSProp = processCSSProp_
exports.processCSSRule = processCSSRule_
exports.processFileEnd = processFileEnd_
exports.processJSArray = processJSArray_
exports.processJSBinaryExpression = processJSBinaryExpression_
exports.processJSBlock = processJSBlock_
exports.processJSChaining = processJSChaining_
exports.processJSClass = processJSClass_
exports.processJSComment = processJSComment_
exports.processJSDeclaration = processJSDeclaration_
exports.processJSDoc = processJSDoc_
exports.processJSExport = processJSExport_
exports.processJSFunction = processJSFunction_
exports.processJSIf = processJSIf_
exports.processJSImport = processJSImport_
exports.processJSON = processJSON_
exports.processJSObject = processJSObject_
exports.processJSPrettier = processJSPrettier_
exports.processJSRedundant = processJSRedundant_
exports.processJSRequire = processJSRequire_
exports.processJSStrict = processJSStrict_
exports.processJSString = processJSString_
exports.processJSSwitch = processJSSwitch_
exports.processJSUnused = processJSUnused_
exports.processJSXAttribute = processJSXAttribute_
exports.processJSXExpression = processJSXExpression_
exports.processPackageJSON = processPackageJSON_
exports.processPackageLockJSON = processPackageLockJSON_
exports.processYAML = processYAML_

module.exports = {
  processCSSProp: processCSSProp_,
  processCSSRule: processCSSRule_,
  processFileEnd: processFileEnd_,
  processJSArray: processJSArray_,
  processJSBinaryExpression: processJSBinaryExpression_,
  processJSBlock: processJSBlock_,
  processJSChaining: processJSChaining_,
  processJSClass: processJSClass_,
  processJSComment: processJSComment_,
  processJSDeclaration: processJSDeclaration_,
  processJSDoc: processJSDoc_,
  processJSExport: processJSExport_,
  processJSFunction: processJSFunction_,
  processJSIf: processJSIf_,
  processJSImport: processJSImport_,
  processJSON: processJSON_,
  processJSObject: processJSObject_,
  processJSPrettier: processJSPrettier_,
  processJSRedundant: processJSRedundant_,
  processJSRequire: processJSRequire_,
  processJSStrict: processJSStrict_,
  processJSString: processJSString_,
  processJSSwitch: processJSSwitch_,
  processJSUnused: processJSUnused_,
  processJSXAttribute: processJSXAttribute_,
  processJSXExpression: processJSXExpression_,
  processPackageJSON: processPackageJSON_,
  processPackageLockJSON: processPackageLockJSON_,
  processYAML: processYAML_,
}
